{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","setCurrentPage","onPageChange","totalPages","Math","ceil","pages","Array","from","length","_","i","isFirstPage","isLastPage","handleClickPrevNext","event","currentTarget","href","includes","state","className","cn","disabled","onClick","map","page","active","items","to","numbers","n","push","getNumbers","App","useState","itemsPerPage","setItemsPerPage","totalItems","displayedItems","slice","firstItem","lastItem","id","value","onChange","Number","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"kNAYaA,EAAwB,SAAC,GAOhC,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,YACcC,EAEb,EAFDC,aAGIC,EAAaC,KAAKC,KAAKP,EAAQC,GAC/BO,EAAQC,MAAMC,KAAK,CAAEC,OAAQN,IAAc,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KACzDC,EAAcZ,IAAgBM,EAAM,GACpCO,EAAab,IAAgBM,EAAMG,OAEnCK,EAAsB,SAC1BC,GAEIA,EACDC,cAAcC,KAAKC,SAAS,WAC3BL,GACFZ,GACE,SAACkB,GAAD,OAAWA,EAAQ,KAInBJ,EAAMC,cAAcC,KAAKC,SAAS,WAClCN,GACFX,GACE,SAACkB,GAAD,OAAWA,EAAQ,MAKzB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAAUV,IAFd,SAKE,mBACE,UAAQ,WACRQ,UAAU,YACVH,KAAK,QACL,gBAAeL,EACfW,QAAST,EALX,oBAWDR,EAAMkB,KAAI,SAAAC,GAAI,OACb,oBACEL,UAAWC,IACT,YACA,CAAEK,OAAQD,IAASzB,IAHvB,SAOE,mBACE,UAAQ,WACRoB,UAAU,YACVH,KAAI,WAAMQ,GACVF,QAAS,kBAAMtB,EAAewB,IAJhC,SAMGA,KAREA,MAaT,oBAAIL,UAAWC,IACb,YACA,CAAEC,SAAUT,IAFd,SAKE,mBACE,UAAQ,WACRO,UAAU,YACVH,KAAK,QACL,gBAAeJ,EACfU,QAAST,EALX,wBCjFR,IACMa,ECNC,SAAoBnB,EAAcoB,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAItB,EAAMsB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IAEfC,EAAU,WACrB,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBALpB,GAKlB,mBAAOlC,EAAP,KAAoBC,EAApB,KAEMoC,EAAaV,EAAMlB,OACnB6B,EAAiBX,EAAMY,MAC3BJ,GAAgBnC,EAAc,GAC9BmC,EAAgBnC,GAEZwC,EAAYF,EAAe,GAC3BG,EAAWH,EAAeA,EAAe7B,OAAS,GAExD,OACE,sBAAKW,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACGkB,EAAe7B,OAAS,EAAxB,eACWT,EADX,mBACiCwC,EADjC,cACgDC,EADhD,eAC+DJ,EAD/D,oBAEWrC,EAFX,kBAEgCwC,EAFhC,eAEgDH,EAFhD,OAKH,sBAAKjB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAOR,EACPS,SAAU,SAAC7B,GACTqB,EAAgBS,OAAO9B,EAAM+B,OAAOH,QACpC1C,EAlCM,IA2BV,UAUE,wBAAQ0C,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEtB,MAAOuC,EACPtC,QAASoC,EACTnC,YAAaA,EACbE,aAAcD,IAGhB,6BACGqC,EAAed,KAAI,SAAAM,GAAC,OACnB,oBAAI,UAAQ,OAAZ,wBACWA,IADX,eAAgCA,aE3D1CkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.086e213d.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React, {\n  Dispatch, FC, SetStateAction,\n} from 'react';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: Dispatch<SetStateAction<number>>,\n};\n\nexport const Pagination: FC<Props> = (\n  {\n    total,\n    perPage,\n    currentPage,\n    onPageChange: setCurrentPage,\n  },\n) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = Array.from({ length: totalPages }, (_, i) => i + 1);\n  const isFirstPage = currentPage === pages[0];\n  const isLastPage = currentPage === pages.length;\n\n  const handleClickPrevNext = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n  ) => {\n    if (event\n      .currentTarget.href.includes('#next')\n    && !isLastPage) {\n      setCurrentPage(\n        (state) => state + 1,\n      );\n    }\n\n    if (event.currentTarget.href.includes('#prev')\n    && !isFirstPage) {\n      setCurrentPage(\n        (state) => state - 1,\n      );\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn(\n        'page-item',\n        { disabled: isFirstPage },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={handleClickPrevNext}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={cn(\n            'page-item',\n            { active: page === currentPage },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => setCurrentPage(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn(\n        'page-item',\n        { disabled: isLastPage },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={handleClickPrevNext}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n\n  );\n};\n","import { FC, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst defaultPage = 1;\nconst items = getNumbers(1, 42);\n\nexport const App: FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(defaultPage);\n\n  const totalItems = items.length;\n  const displayedItems = items.slice(\n    itemsPerPage * (currentPage - 1),\n    itemsPerPage * (currentPage),\n  );\n  const firstItem = displayedItems[0];\n  const lastItem = displayedItems[displayedItems.length - 1];\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {displayedItems.length > 1\n          ? `Page ${currentPage} (items ${firstItem} - ${lastItem} of ${totalItems})`\n          : `Page ${currentPage} (item ${firstItem} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => {\n              setItemsPerPage(Number(event.target.value));\n              setCurrentPage(defaultPage);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={totalItems}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {displayedItems.map(n => (\n          <li data-cy=\"item\" key={`item-${n}`}>\n            {`Item ${n}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}